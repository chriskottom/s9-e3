#!/usr/bin/env ruby

require "logicle"


USAGE_MESSAGE = "logicle <CIRCUIT FILE TO SOLVE> "


# Exit with usage message if user forgets to provide an input file.
if ARGV.length == 0
   puts USAGE_MESSAGE
   exit(1)
end


# Capture inputs from the command line.
circuit_file = ARGV.shift


# Instantiate the Logicle::Simulator instance.
simulator = Logicle::Simulator.new(circuit_file)
puts "Loaded main circuit from file: #{ circuit_file }"


# Prompt the user to enter states for each of the switch inputs.
switches = simulator.inputs.values
puts "The circuit to be solved requires #{ switches.count } input values (on/off)."

switches.each_with_index do |switch, index|
  $stdout.printf("Switch %d on? (Y/n):>> ", index + 1)
  input = $stdin.gets.chomp.downcase.chars.first
  case input
  when "y"
    switch.type = :on
  when "n"
    switch.type = :off
  else
    puts "Invalid input!"
    redo
  end
end


# Evaluate the circuit.
simulator.evaluate
bulbs = simulator.outputs.values


# Print out the bulb states.
bulbs.each_with_index do |bulb, i|
  puts "Bulb \##{ i + 1 }:  #{ bulb.state ? "on" : "off" }"
end


# Ask the user to save the result file.
$stdout.write "Save output? (y/N): "
save_output_flag = $stdin.gets.chomp

if save_output_flag =~ /\Ay/i
  output_filename = File.realdirpath(circuit_file).sub(/\.tgf\Z/, "_solved.tgf")
  simulator.save(output_filename)
end
